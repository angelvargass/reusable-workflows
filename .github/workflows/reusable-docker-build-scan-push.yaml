name: Docker Build, Scan, and Push
on:
  workflow_call:
    inputs:
        registry:
            type: string
            description: Name of the Docker registry where the image will be pushed. Required if `push` is `true`
        push: 
            type: string
            default: 'true'
            description: Whether to push the Docker image to the registry. Default is `true`
        image_name:
            type: string
            required: true
            description: Name of the Docker image
        image_tag:
            type: string
            required: true
            description: Tag of the Docker image
        dockerfile_path:
            type: string
            required: true
            description: Path to the Dockerfile   
        scan:
            type: string
            default: 'true'
            description: Whether to scan the Docker image for vulnerabilities. Default is `true`    
    secrets:
        docker_username:
            required: true
            description: Username for the Docker registry
        docker_password:
            required: true
            description: Password for the Docker registry     

permissions:
  contents: read

jobs:
    build-scan-push:
        name: Build, Scan, and Push Docker Image
        runs-on: ubuntu-latest

        steps:
        - name: Get SHA
          run: |
            if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
              echo "SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
            else
              echo "SHA=${{ github.sha }}" >> $GITHUB_ENV
            fi

        - name: Checkout code
          uses: actions/checkout@v4
          with:
            ref: ${{ env.SHA }}
        
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            registry: ${{ inputs.registry }}
            username: ${{ secrets.docker_username }}
            password: ${{ secrets.docker_password }}
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        
        - name: Extract metadata (tags, labels) for Docker
          id: metadata
          uses: docker/metadata-action@v5
          with:
            images: ${{ secrets.docker_username }}/${{ inputs.image_name }}
            tags: |
              type=raw,value=${{ inputs.image_tag }}

        - name: Build and export to Docker
          uses: docker/build-push-action@v6
          with:
            load: true
            platforms: linux/amd64
            context: ${{ inputs.dockerfile_path }}
            tags: ${{ steps.metadata.outputs.tags }}
            labels: ${{ steps.metadata.outputs.labels }}

        - name: Run Trivy vulnerability scanner
          if: ${{ inputs.scan == 'true' }}
          uses: aquasecurity/trivy-action@0.32.0
          with:
            image-ref: ${{ steps.metadata.outputs.tags }}
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH,MEDIUM'

        - name: Build and push to Docker
          if: ${{ inputs.push == 'true' }}
          uses: docker/build-push-action@v6
          with:
            push: true
            platforms: linux/amd64
            tags: ${{ steps.metadata.outputs.tags }}
            labels: ${{ steps.metadata.outputs.labels }}